-# This template is i18n-ready: if you don't use i18n, then you can replace the pagy_t
-# calls with the actual strings ("&lsaquo; Prev", "Next &rsaquo;", "&hellip;").
-# The link variable is set to a proc that returns the link tag.
-# Usage: link.call( page_number [, text [, extra_attributes_string ]])

- if @pagy.present? && @pagy.pages > 1
  - link = pagy_link_proc(@pagy, 'class="page-link"')
  %nav.pagy-bootstrap-nav{ aria: { label: :pager, role: :navigation } }
    %ul.pagination
      - if @pagy.prev
        %li.page-item.prev!= link.call(@pagy.prev, t('.prev_html'), 'aria-label="previous"')
      - else
        %li.page-item.prev.disabled= button_tag t('.prev_html'), type: :button, class: 'page-link'
      - @pagy.series.each do |item| # series example: [1, :gap, 7, 8, "9", 10, 11, :gap, 36]
        - if item.is_a?(Integer)
          %li.page-item!= link.call(item)
        - elsif item.is_a?(String)
          %li.page-item.active!= link.call(item)
        - elsif item == :gap
          %li.page-item.disabled.gap= button_tag t('.gap_html'), type: :button, class: 'page-link'
      - if @pagy.next
        %li.page-item.next!= link.call(@pagy.next, t('.next_html'), 'aria-label="next"')
      - else
        %li.page-item.next.disabled= button_tag t('.next_html'), type: :button, class: 'page-link'
